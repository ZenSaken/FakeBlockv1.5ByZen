-- FakeBlockv1.5ByZen.lua
-- Client-only LocalScript content. Put this file in your GitHub repo's main branch,
-- then load with:
-- loadstring(game:HttpGet("https://raw.githubusercontent.com/ZenSaken/FakeBlockv1.5ByZen/main/FakeBlockv1.5ByZen.lua"))()

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer

-- Animation IDs
local ANIM_NORMAL_ID  = "72722244508749"
local ANIM_M34_ID     = "96959123077498"
local ANIM_SPECIAL_ID = "95802026624883"

-- GUI / behavior
local GUI_NAME = "FakeBlockv1_5_ByZen"
local modes = {"Normal","M3&4","Special"}
local modeIndex = 1

-- animation helpers
local animator, currentTrack
local animationCache = {}

local function ensureAnimator()
    local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local hum = char:FindFirstChildWhichIsA("Humanoid") or char:WaitForChild("Humanoid",5)
    if not hum then return nil end
    animator = hum:FindFirstChildOfClass("Animator")
    if not animator then
        animator = Instance.new("Animator")
        animator.Parent = hum
    end
    return animator
end

local function getAnim(id)
    if animationCache[id] then return animationCache[id] end
    local a = Instance.new("Animation")
    a.Name = "FBAnim_" .. id
    a.AnimationId = "rbxassetid://" .. id
    animationCache[id] = a
    return a
end

local function stopCurrent()
    if currentTrack then
        pcall(function() currentTrack:Stop() end)
        currentTrack = nil
    end
end

local function playAnimId(id, statusLabel)
    if not pcall(ensureAnimator) or not animator then
        if statusLabel then statusLabel.Text = "No Humanoid" end
        return
    end
    local anim = getAnim(id)
    stopCurrent()
    local ok, track = pcall(function() return animator:LoadAnimation(anim) end)
    if not ok or not track then
        if statusLabel then statusLabel.Text = "Load fail" end
        warn("Failed to load animation:", id)
        return
    end
    track.Priority = Enum.AnimationPriority.Action
    pcall(function() track:Play() end)
    currentTrack = track
    track.Stopped:Connect(function()
        if currentTrack == track then currentTrack = nil end
        if statusLabel then statusLabel.Text = "Idle" end
    end)
    if statusLabel then statusLabel.Text = "Playing" end
end

local function playByMode(m, statusLabel)
    if m == "Normal" then
        playAnimId(ANIM_NORMAL_ID, statusLabel)
    elseif m == "M3&4" then
        playAnimId(ANIM_M34_ID, statusLabel)
    elseif m == "Special" then
        playAnimId(ANIM_SPECIAL_ID, statusLabel)
    end
end

-- Build GUI (small, left, draggable header)
local function createGui()
    local pg = localPlayer:WaitForChild("PlayerGui")
    if pg:FindFirstChild(GUI_NAME) then pg[GUI_NAME]:Destroy() end

    local sg = Instance.new("ScreenGui", pg)
    sg.Name = GUI_NAME
    sg.ResetOnSpawn = false

    local frame = Instance.new("Frame", sg)
    frame.Name = "Main"
    frame.Size = UDim2.new(0, 220, 0, 128)
    frame.Position = UDim2.new(0, 8, 0.45, -64)
    frame.BackgroundColor3 = Color3.fromRGB(22,22,26)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.ZIndex = 2
    local corner = Instance.new("UICorner", frame); corner.CornerRadius = UDim.new(0,10)

    -- header (draggable)
    local header = Instance.new("Frame", frame)
    header.Name = "Header"
    header.Size = UDim2.new(1,0,0,36)
    header.Position = UDim2.new(0,0,0,0)
    header.BackgroundTransparency = 0.12
    local hcorner = Instance.new("UICorner", header); hcorner.CornerRadius = UDim.new(0,8)

    local title = Instance.new("TextLabel", header)
    title.Size = UDim2.new(1,-100,1,0)
    title.Position = UDim2.new(0,8,0,0)
    title.BackgroundTransparency = 1
    title.Text = "Fake Block - v1.5"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 14
    title.TextColor3 = Color3.fromRGB(230,230,230)
    title.TextXAlignment = Enum.TextXAlignment.Left

    local modeBtn = Instance.new("TextButton", header)
    modeBtn.Name = "ModeBtn"
    modeBtn.Size = UDim2.new(0, 92, 0, 24)
    modeBtn.Position = UDim2.new(1, -96, 0, 6)
    modeBtn.Text = modes[modeIndex]
    modeBtn.Font = Enum.Font.Gotham
    modeBtn.TextSize = 13
    modeBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    modeBtn.AutoButtonColor = true
    Instance.new("UICorner", modeBtn).CornerRadius = UDim.new(0,6)

    -- body
    local body = Instance.new("Frame", frame)
    body.Name = "Body"
    body.Size = UDim2.new(1,-8,1,-44)
    body.Position = UDim2.new(0,4,0,40)
    body.BackgroundTransparency = 1

    local status = Instance.new("TextLabel", body)
    status.Name = "Status"
    status.Size = UDim2.new(1,0,0,16)
    status.Position = UDim2.new(0,0,0,0)
    status.BackgroundTransparency = 1
    status.Text = "Idle"
    status.Font = Enum.Font.Gotham
    status.TextSize = 12
    status.TextColor3 = Color3.from
